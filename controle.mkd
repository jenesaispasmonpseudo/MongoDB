Exercice 1

voici la requête à effectuer  db.persons.find({"vocation" : "ENGINEER"}).sort({"dateofbirth":1}).limit(3)
on a donc en premier Sophie puis Elise et enfin Olive

Exercice 2

voici la requête à effectuer db.orders.aggregate([{$match: {"orderdate": { $gte: ISODate('2020-01-01T00:00:00.000Z'),$lt: ISODate('2021-01-01T00:00:00.000Z')}}},{$group: {_id: "$customer_id",first_purchase_date: { $min: "$orderdate" },total_orders: { $sum: 1 },total_value: { $sum: "$value" },orders: {$push: {orderdate: "$orderdate",  value: "$value"}}}}])

Exercice 3

db.orders.aggregate([
 {
    $match: {
      "price": {
       $gte: NumberDecimal("15"),
      }
    }
   },
  {
    $group: {
      _id: "$customer_id",
      total_orders: { $sum: 1 },
       total_value: { $sum: "$value" },
       orders: {
         $push: {
          orderdate: "$orderdate",
         value: "$value"
        }
      }
     }
   }
 ])

 db.orders.aggregate( [ { $unwind : "$order_id" } ] )
 
db.orders.aggregate([
    {
        $unwind: "$order_id"
    },
    {
        $group: {
            _id: null,
            total_price: { $sum: "$price" }
        }
    }
])

Ecercice 4 
db.orders.aggregate([
  {
    $lookup: {
      from: "products",
      localField: "customer_id",
      foreignField: "prod_id",
      as: "id"
    }
  }
])

Exercice 8

1- Identifier toutes les tornades survenues dans un rayon spécifique autour d'un point donné.
db.tornades.find({
  "geometry": {
    $geoIntersects: {
      $geometry: {
        "type": "Point",
        "coordinates": [ -73.98241999999999, 40.579505 ]
      }
    }
  }
}, {
   "name": 1,
      "_id": 0
})

2- Calculer le nombre de tornades par état ou région.

db.tornade.aggregate([{
  $match: {
    Etat: 1,
    Region:1
  }
}, {
  $group: {
    _id: 0,
    "countDocuments": {
      $sum: 1
    }
  }
}])

3- Trouver les tornades les plus proches d'une ville spécifique.

var marseille = {"type": "Point", "coordinates": [43.300000, 5.400000]}
 
db.salles.createIndex({"adresse.localisation": "2dsphere"})

db.tornade.find({
  "adresse.localisation": {
    $nearSphere: {
      $geometry: marseille,
    }
  }
})


